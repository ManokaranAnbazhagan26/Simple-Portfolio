{"version":3,"file":"static/js/611.db3cb58c.chunk.js","mappings":"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","sources":["components/Custom/CustomCard.js","components/Header.jsx","components/Projects.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n};\n\nconst CustomCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n  const { SectionType } = props;\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={SectionType?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{SectionType.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(SectionType.bodyText)}\n          </Card.Text>\n        </Card.Body>\n        <Card.Body>\n          {SectionType?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={`outline-${theme.bsSecondaryVariant} contrast-dark`} \n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {SectionType.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {SectionType.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nCustomCard.propTypes = {\n  SectionType: PropTypes.shape({ // Changed from project to SectionType\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default CustomCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;","import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { ThemeContext } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport CustomCard from './Custom/CustomCard';\nimport FallbackSpinner from './FallbackSpinner';\nimport Slider from 'react-slick';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n  sliderContainerStyle: {\n    padding: '1rem 2rem',\n    maxWidth: '100vw',\n  },\n  centerSlideStyle: {\n    transform: 'scale(1.5) translateX(50%)',\n    zIndex: 1,\n  },\n};\n\nconst Projects = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.projects, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    centerMode: true,\n    centerPadding: '60px',\n    initialSlide: 1,\n  };\n  \n\n  return (\n    <div id=\"/projects\">\n      <Header title={header} />\n      {data ? (\n        <div  className=\"projects-container\">\n          <Container style={styles.containerStyle}>\n            <div style={styles.sliderContainerStyle}>\n              <Slider {...settings}>\n                {data.projects?.map((project, index) => (\n                  <div key={project.title} style={index === 1 ? styles.centerSlideStyle : {}}>\n                    <Fade>\n                      <CustomCard SectionType={project} />\n                    </Fade>\n                  </div>\n                ))}\n              </Slider>\n            </div>\n          </Container>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n};\n\nProjects.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Projects;"],"names":["styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","props","_SectionType$links","theme","useContext","ThemeContext","SectionType","_jsx","Col","children","_jsxs","Card","style","backgroundColor","cardBackground","borderColor","cardBorderColor","text","bsSecondaryVariant","Img","variant","src","image","Body","Title","title","Text","bodyText","ReactMarkdown","links","map","link","Button","buttonStyle","concat","onClick","window","open","href","tags","Footer","cardFooterBackground","tag","Badge","pill","bg","bsPrimaryVariant","className","containerStyle","marginBottom","sliderContainerStyle","maxWidth","centerSlideStyle","transform","zIndex","_data$projects","header","data","setData","useState","useEffect","fetch","endpoints","projects","method","then","res","json","catch","err","id","Header","Container","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","initialSlide","project","index","Fade","CustomCard","FallbackSpinner"],"sourceRoot":""}