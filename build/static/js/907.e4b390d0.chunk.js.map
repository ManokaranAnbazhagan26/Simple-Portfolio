{"version":3,"file":"static/js/907.e4b390d0.chunk.js","mappings":"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","sources":["components/Custom/CustomCard.js","components/Header.jsx","../node_modules/react-bootstrap/esm/Row.js","components/Skills.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n};\n\nconst CustomCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n  const { SectionType } = props;\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={SectionType?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{SectionType.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(SectionType.bodyText)}\n          </Card.Text>\n        </Card.Body>\n        <Card.Body>\n          {SectionType?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={`outline-${theme.bsSecondaryVariant} contrast-dark`} \n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {SectionType.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {SectionType.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nCustomCard.propTypes = {\n  SectionType: PropTypes.shape({ // Changed from project to SectionType\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default CustomCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React, { useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport CustomCard from './Custom/CustomCard'; \nimport PropTypes from 'prop-types';\n\nconst Skills = (props) => {\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.skills, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <div id=\"/skills\">\n      <Header title={header} />\n      {data ? (\n        <div className=\"section-content-container\">\n          <Container>\n            <Row>\n              {data.skills &&\n                data.skills.map((skill) => (\n                  <Col md={3} key={skill.title}>\n                    <CustomCard SectionType={skill} />\n                  </Col>\n                ))}\n            </Row>\n          </Container>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </div>\n  );\n}\n\nSkills.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Skills;\n"],"names":["styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","props","_SectionType$links","theme","useContext","ThemeContext","SectionType","_jsx","Col","children","_jsxs","Card","style","backgroundColor","cardBackground","borderColor","cardBorderColor","text","bsSecondaryVariant","Img","variant","src","image","Body","Title","title","Text","bodyText","ReactMarkdown","links","map","link","Button","buttonStyle","concat","onClick","window","open","href","tags","Footer","cardFooterBackground","tag","Badge","pill","bg","bsPrimaryVariant","className","Row","React","_ref","ref","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName","header","data","setData","useState","useEffect","fetch","endpoints","skills","method","then","res","json","catch","err","id","Header","Container","skill","md","CustomCard","FallbackSpinner"],"sourceRoot":""}